<div class="step-container">
    <div class="progress px-1" style="height: 3px;">
        <div class="progress-bar progress-bar-purple" role="progressbar" style="width: @(((double)(step - 1)/(steps - 1)) * 100)%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
    </div>
    <div class="circle-container d-flex justify-content-between">
        @for (int i = 1; i <= steps; i++)
        {
            int selected = i;

            <div class="@(step >= selected ? "step-circle step-reached" : "step-circle step-pending")" @onclick="(() => SetStep(selected))">@(selected)</div>
        }
    </div>
</div>

@code {
    private int step { get; set; } = 1;

    [Parameter]
    public int steps { get; set; } = 1;

    [Parameter]
    public EventCallback<int> OnClick { get; set; }

    public int GetStep()
    {
        return step;
    }

    public void SetStep(int selected)
    {
        step = selected <= steps ? selected : 1;
        OnClick.InvokeAsync(step);
        StateHasChanged();
    }
}
